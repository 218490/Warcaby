#include "graftest.hh"
void GrafTest::run(int ile)
{
  kolejka<int> *k;
  lista<int> *l;
  int pom;
  graf::Graf G;
  for(int i=0; i<10; i++)
    G.addVertex(i);
  G.addEdge(1,2);
  G.addEdge(1,3);
  G.addEdge(2,4);
  G.addEdge(2,3);
  G.addEdge(2,5);
  G.addEdge(3,5);
  G.addEdge(5,6);
  G.addEdge(6,7);
  G.addEdge(6,4);
  G.addEdge(3,7);
  G.addEdge(4,10);
  G.addEdge(7,8);
  G.addEdge(6,9);
  G.addEdge(9,10);
  graf::BFS B(G);
  graf::DFS D(G);
  k=B.path(G, 1, 10);
  l=D.path(G, 1, 10);
  while(k->isEmpty()==false)
    {
      pom=k->front();
      k->dequeue();
      std::cout<<pom<<" ";
    }
  std::cout<<std::endl;
  while(l->isEmpty()==false)
    {
      pom=l->get(0);
      l->remove();
      std::cout<<pom<<" ";
    }
  
}
